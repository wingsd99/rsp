<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <title>RSP-GAME</title>
  </head>
  <body>
    <!-- header -->
    <%- include('header') %>
    <div class="main">
      <div>Room: <span class="display-room"><%= parseInt(roomNumber) + 1 %></span></div>
      <div>Nickname: <span class="display-nickname"><%= nickname %></span></div>
      <p>Please select your hand</p>
      <div>
        <button class="rock hand-button">
          <img src="/image/rock.png" alt="rock.png">Rock
        </button>
        <button class="scissors hand-button">
          <img src="/image/scissors.png" alt="scissors.png">Scissors
        </button>
        <button class="paper hand-button">
          <img src="/image/paper.png" alt="paper.png">Paper
        </button>
      </div>
      <div>Room status: <span class="room-status"></span></div>
      <div class="player result-info"></div>
      <div class="player-hands result-info"></div>
      <div class="your-result result-info"></div>
      <img class="your-result-image" src="" alt="DRAW or LOSE or WIN"/>
      <button class="next-game">Next game</button>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      const displayRoom = parseInt(document.querySelector(".display-room").innerHTML) - 1;
      const displayNickname = document.querySelector(".display-nickname").innerHTML;
      socket.emit("join-room", [displayRoom, displayNickname]);
      
      const HANDS = ["Rock", "Scissors", "Paper"];

      const rock = document.querySelector(".rock");
      const scissors = document.querySelector(".scissors");
      const paper = document.querySelector(".paper");
      const handButton = document.querySelectorAll(".hand-button");

      const roomStatus = document.querySelector(".room-status");
      const player = document.querySelector(".player");
      const playerHands = document.querySelector(".player-hands");
      const yourResult = document.querySelector(".your-result");
      const resultInfo = document.querySelectorAll(".result-info");
      const yourResultImage = document.querySelector(".your-result-image");
      const nextGame = document.querySelector(".next-game");

      const disableButton = () => handButton.forEach(elm => elm.disabled = true);

      rock.addEventListener("click", () => {
        player.innerHTML = `You selected: ${HANDS[0]}`;
        socket.emit("player-select", [HANDS[0], displayRoom]);
        disableButton();
      });
      scissors.addEventListener("click", () => {
        player.innerHTML = `You selected: ${HANDS[1]}`; 
        socket.emit("player-select", [HANDS[1], displayRoom]);
        disableButton();
      });
      paper.addEventListener("click", () => {
        player.innerHTML = `You selected: ${HANDS[2]}`;
        socket.emit("player-select", [HANDS[2], displayRoom]);
        disableButton();
      });

      nextGame.addEventListener("click", () => {
        handButton.forEach(elm => elm.disabled = false);
        player.style.visibility = "visible";
        resultInfo.forEach(elm => elm.innerHTML = "");
        yourResultImage.style.visibility = "hidden";
        nextGame.style.visibility = "hidden";
        socket.emit("next-game", displayRoom);
      });

      socket.on("room-status", (msg) => {
        roomStatus.innerHTML = msg;
      });
      
      socket.on("matchFinish", (res) => {
        yourResult.innerHTML = `Result: <span>${res[0]}</span>`;
        // 例: 1番目に入室した人はplayerHands[0]だからPlayer1になる
        playerHands.innerHTML = res[1].map(elm => {
          return `${elm[0]}'s hand: ${elm[1]}`;
        }).join("<br />");

        switch (res[0]) {
          case "DRAW" :
            yourResultImage.src = "/image/draw.png";
            yourResultImage.alt = "draw.png";
            break;
          case "LOSE" :
            yourResultImage.src = "/image/lose.png";
            yourResultImage.alt = "lose.png";
            break;
          case "WIN" :
            yourResultImage.src = "/image/win.png";
            yourResultImage.alt = "win.png";
        }

        player.style.visibility = "hidden";
        yourResultImage.style.visibility = "visible";
        nextGame.style.visibility = "visible";
      });
      //FIXME: ページリロード時の処理
    </script>
  </body>
</html>
